CREATE TABLE IF NOT EXISTS ratings (
    rating_id int4 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) UNIQUE
);

CREATE TABLE IF NOT EXISTS users (
    user_id int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login varchar(50) UNIQUE,
    name varchar(50),
    email varchar(50),
    birthday date
    CONSTRAINT proper_email CHECK (email REGEXP '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$')
);

CREATE TABLE IF NOT EXISTS films (
    film_id int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) UNIQUE,
    description text,
    releaseDate date,
    duration int4,
    rating_id int4 REFERENCES ratings(rating_id) ON DELETE SET DEFAULT -1
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id int4 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genres (
    film_id int8 REFERENCES films(film_id) ON DELETE CASCADE,
    genre_id int4 REFERENCES genres(genre_id) ON DELETE CASCADE,
    PRIMARY KEY(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS friendship (
    userOne_id int8 REFERENCES users(user_id) ON DELETE CASCADE,
    userTwo_id int8 REFERENCES users(user_id) ON DELETE CASCADE,
    accepted bool,
    PRIMARY KEY (userOne_id, userTwo_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
    film_id int8 REFERENCES films(film_id) ON DELETE CASCADE,
    user_id int8 REFERENCES users(user_id) ON DELETE CASCADE,
    PRIMARY KEY(film_id, user_id)
)
